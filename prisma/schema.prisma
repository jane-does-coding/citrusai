generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  username       String
  email          String   @unique
  hashedPassword String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  interviews     Interview[] @relation("UserInterviews")
  notifications  Notification[]
}

model Interview {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  createdBy    User      @relation("UserInterviews", fields: [createdById], references: [id])
  createdById  String    @db.ObjectId
  receiverName String
  receiverEmail String
  comments     String?
  fields       Field[]  
  isCompleted  Boolean   @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  notifications Notification[]
}

model Field {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  interview     Interview @relation(fields: [interviewId], references: [id])
  interviewId   String   @db.ObjectId
  type          String  
  label         String
  placeholder   String
  receiverInput String? 
  options       String[]

}

model Notification {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  interview   Interview @relation(fields: [interviewId], references: [id])
  interviewId String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @db.ObjectId
  message     String
  isSeen      Boolean   @default(false)
  createdAt   DateTime  @default(now())
}
